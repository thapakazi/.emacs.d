#+TITLE: Utilities helps reach plateau
#+DATE: Friday, Mar 10 2017 
#+DESCRIPTION: simple functions to do magical things



* Copy buffer file name to kill ring 
  src: [[https://github.com/baron42bba/.emacs.d/blob/master/bba.org#copy-buffer-file-name-to-kill-ring][g:baron42bba]], handy one mate ðŸ™‡
#+BEGIN_SRC emacs-lisp
(defun bba-copy-buffer-name ()
  (interactive)
  (kill-new (buffer-file-name))
  (message ( format "stored '%s' in kill-ring" buffer-file-name))
  )
#+END_SRC

* By indentation
  src: [[https://github.com/baron42bba/.emacs.d/blob/master/bba.org#by-indentation][g:baron42bba]] who referenced it from [[https://github.com/Wilfred/.emacs.d/blob/gh-pages/init.org#by-indentation][g:Wilfred]]. 
  #+BEGIN_SRC emacs-lisp
  (defun beginning-of-line-dwim ()
  "Toggles between moving point to the first non-whitespace character, and
the start of the line."
  (interactive)
  (let ((start-position (point)))
    ;; Move to the first non-whitespace character.
    (back-to-indentation)
    
    ;; If we haven't moved position, go to start of the line.
    (when (= (point) start-position)
      (move-beginning-of-line nil))))

(global-set-key (kbd "C-a") 'beginning-of-line-dwim)
  #+END_SRC

  #+RESULTS:
  : beginning-of-line-dwim

* Scratch Files
** getting scratch files
   url: [[https://github.com/Wilfred/.emacs.d/blob/gh-pages/init.org#scratch-files][g:Wilfred]]
   #+BEGIN_SRC emacs-lisp
   (defun start--file (path)
  "Create a file at PATH, creating any containing directories as necessary.
Visit the file after creation."
  (make-directory (file-name-directory path) t)
  (find-file path))

(defun wh/start-scratch-file (file-name)
  "Create a file in ~/scratch for the given file name."
  (interactive "sName of scratch file: ")
  (start--file (expand-file-name (format "~/scratch/%s" file-name))))

(defun wh/start-tmp-file (file-name)
  "Create a file in /tmp for the given file name."
  (interactive "sName of temporary file: ")
  (start--file (expand-file-name (format "/tmp/%s" file-name))))

   #+END_SRC

   #+RESULTS:
   : wh/start-tmp-file
** exporting htmls
   #+BEGIN_SRC emacs-lisp
   (defun wh/start-scratch-html-file (file-name)
  "Create a test HTML file in ~/scratch to play around with."
  (interactive "sName of scratch HTML file: ")
  (wh/start-scratch-file file-name)
  (erase-buffer)
  (insert "<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">
        <title>
        </title>
        <style type=\"text/css\">
        </style>
    </head>
    <body>

    </body>
</html>")
  (forward-line -2)
  (move-end-of-line nil))
   #+END_SRC

   #+RESULTS:
   : wh/start-scratch-html-file

